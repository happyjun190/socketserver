<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.socketserver.thrack.dao.InverterDataDAO">
    <!-- 创建SEQUENCE
        CREATE SEQUENCE seq_on_todaysummary
        INCREMENT BY 1
        START WITH 1
        NOMAXvalue
        NOCYCLE
        CACHE 100
    -->
    <!--插入/更新今日统计数据(今日发电量/省钱量/co2减排量)-->
    <insert id="insertTodaySummary">
      MERGE INTO "TS_TODAY_SUMMARY" T1
      USING (select #{dtuId} as dtuId, #{inverterAddr} as inverterAddr, #{inverterId} as inverterId, #{generateCapacity} as generateCapacity, #{saveMoney} as saveMoney, #{co2Reduction} as co2Reduction, #{datestring} as datestring from DUAL ) t2
      ON (T1."DTU_ID"=t2."DTUID" AND T1."INVERTER_ADDR"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING")
      WHEN MATCHED THEN UPDATE  SET
        T1."GENERATE_CAPACITY" = t2."GENERATECAPACITY",
        T1."SAVE_MONEY" = t2."SAVEMONEY",
        T1."CO2_REDUCTION" = t2."CO2REDUCTION",
        T1."MTIME" = SYSDATE
        WHERE T1."DTU_ID"=t2."DTUID" AND T1."INVERTER_ADDR"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING"
      WHEN NOT MATCHED THEN
      INSERT("ID", "DTU_ID", "INVERTER_ADDR", "INVERTER_ID", "GENERATE_CAPACITY", "SAVE_MONEY", "CO2_REDUCTION", "DATESTRING", "CTIME", "MTIME")
               VALUES (seq_on_todaysummary.nextval, #{dtuId}, #{inverterAddr}, #{inverterId}, #{generateCapacity}, #{saveMoney}, #{co2Reduction}, #{datestring}, SYSDATE, SYSDATE)
    </insert>


    <!--插入/更新累计统计数据(累计发电量/省钱量/co2减排量)-->
    <insert id="insertTotalSummary">
        MERGE INTO "TS_TODAY_SUMMARY" T1
        USING (select #{dtuId} as dtuId, #{inverterAddr} as inverterAddr, #{inverterId} as inverterId, #{totalGenerateCapacity} as totalGenerateCapacity, #{totalSaveMoney} as totalSaveMoney, #{totalCo2Reduction} as totalCo2Reduction, #{datestring} as datestring from dual ) t2
        ON (T1."DTU_ID"=t2."DTUID" AND T1."INVERTER_ADDR"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING")
        WHEN MATCHED THEN UPDATE  SET
        T1."TOTAL_GENERATE_CAPACITY" = t2."TOTALGENERATECAPACITY",
        T1."TOTAL_SAVE_MONEY" = t2."TOTALSAVEMONEY",
        T1."TOTAL_CO2_REDUCTION" = t2."TOTALCO2REDUCTION",
        T1."MTIME" = SYSDATE
        WHERE T1."DTU_ID"=t2."DTUID" AND T1."INVERTER_ADDR"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING"
        WHEN NOT MATCHED THEN
        INSERT("ID", "DTU_ID", "INVERTER_ADDR", "INVERTER_ID", "GENERATE_CAPACITY", "SAVE_MONEY", "CO2_REDUCTION", "DATESTRING", "CTIME", "MTIME")
        VALUES (seq_on_todaysummary.nextval, #{dtuId}, #{inverterAddr}, #{inverterId}, #{totalGenerateCapacity}, #{totalSaveMoney}, #{totalCo2Reduction}, #{datestring}, SYSDATE, SYSDATE)
    </insert>


    <!--插入运行参数信息-->
    <insert id="insertInverterRealtimeData">
        INSERT INTO "TS_INVERTER_REALTIMEDATA" ("ID", "DTU_ID", "INVERTER_ADDR", "INVERTER_ID", "PV1_VOLTAGE", "PV2_VOLTAGE", "PV3_VOLTAGE", "PV4_VOLTAGE",
                                                "PV1_ELECTRIC_CURRENT", "PV2_ELECTRIC_CURRENT", "PV3_ELECTRIC_CURRENT", "PV4_ELECTRIC_CURRENT",
                                                "U_PHASE_VOLTAGE", "V_PHASE_VOLTAGE", "W_PHASE_VOLTAGE", "BUS_PHASE_VOLTAGE",
                                                "U_PHASE_ELECTRIC_CURRENT", "V_PHASE_ELECTRIC_CURRENT", "W_PHASE_ELECTRIC_CURRENT", "BUS_PHASE_ELECTRIC_CURRENT",
                                                "GRID_FREQUENCY", "POWER_FACTOR", "INPUT_POWER", "OUTPUT_POWER",
                                                "TEMPERATURE1", "TEMPERATURE2", "TEMPERATURE3",
                                                "GROUNDING_RESISTANCE", "LEAKAGE_CURRENT", "DC_COMPONENT", "CTIME")
           VALUES (SEQ_ON_INVERTEROPERPARAMS.NEXTVAL, #{dtuId}, #{inverterAddr}, #{inverterId}, #{pv1Voltage}, #{pv2Voltage}, #{pv3Voltage}, #{pv4Voltage},
                                                #{pv1ElectricCurrent}, #{pv2ElectricCurrent}, #{pv3ElectricCurrent}, #{pv4ElectricCurrent},
                                                #{uPhaseVoltage}, #{vPhaseVoltage}, #{wPhaseVoltage}, #{busPhaseVoltage},
                                                #{uPhaseElectricCurrent}, #{vPhaseElectricCurrent}, #{wPhaseElectricCurrent}, #{busPhaseElectricCurrent},
                                                #{gridFrequency}, #{powerFactor}, #{inputPower}, #{outputPower},
                                                #{temperature1}, #{temperature2}, #{temperature3},
                                                #{groundingResistance}, #{leakageCurrent}, #{dcComponent}, SYSDATE)
    </insert>


    <!--插入/更新当前无功功率-->
    <insert id="insertReactivePowerToTodaySummary">
        MERGE INTO "TS_TODAY_SUMMARY" T1
        USING (select #{dtuId} as dtuId, #{inverterAddr} as inverterAddr, #{inverterId} as inverterId, #{reactivePower} as reactivePower, #{datestring} as datestring from DUAL ) t2
        ON (T1."dtu_id"=t2."DTUID" AND T1."inverter_addr"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING")
        WHEN MATCHED THEN UPDATE  SET
            T1."REACTIVE_POWER" = t2."REACTIVEPOWER",
            T1."MTIME" = SYSDATE
        WHERE T1."dtu_id"=t2."DTUID" AND T1."inverter_addr"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING"
        WHEN NOT MATCHED THEN
        INSERT("ID", "DTU_ID", "INVERTER_ADDR", "INVERTER_ID", "REACTIVE_POWER", "DATESTRING", "CTIME", "MTIME")
        VALUES (SEQ_ON_TODAYSUMMARY.NEXTVAL, #{dtuId}, #{inverterAddr}, #{inverterId}, #{reactivePower}, #{datestring}, SYSDATE, SYSDATE)
    </insert>


    <!--更新逆变器的一些状态-->
    <insert id="insertInverterStatus">
        MERGE INTO "TS_TODAY_SUMMARY" T1
        USING (select #{dtuId} as dtuId, #{inverterAddr} as inverterAddr, #{inverterId} as inverterId, #{datestring} as datestring,
                       #{exception1} as exception1, #{exception2} as exception2, #{exception3} as exception3, #{exception4} as exception4,
                       #{exception5} as exception5, #{exception6} as exception6, #{exception7} as exception7, #{exception8} as exception8,
                       "TO_DATE"(TO_CHAR(#{inverterTime} / (1000 * 60 * 60 * 24) + TO_DATE('1970-01-01 08:00:00', 'YYYY-MM-DD HH:MI:SS'), 'YYYY-MM-DD HH:MI:SS'), 'YYYY-MM-DD HH:MI:SS') as inverterTime, #{inverterStatus} as inverterStatus
                from dual ) t2
        ON (T1."DTU_ID"=t2."DTUID" AND T1."inverter_addr"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING")
        WHEN MATCHED THEN UPDATE  SET
            T1."EXCEPTION1" = t2."EXCEPTION1",
            T1."EXCEPTION2" = t2."EXCEPTION2",
            T1."EXCEPTION3" = t2."EXCEPTION3",
            T1."EXCEPTION4" = t2."EXCEPTION4",
            T1."EXCEPTION5" = t2."EXCEPTION5",
            T1."EXCEPTION6" = t2."EXCEPTION6",
            T1."EXCEPTION7" = t2."EXCEPTION7",
            T1."EXCEPTION8" = t2."EXCEPTION8",
            T1."INVERTER_STATUS" = t2."INVERTERSTATUS",
            T1."INVERTER_TIME" = t2."INVERTERTIME",
            T1."MTIME" = SYSDATE
        WHERE T1."DTU_ID"=t2."DTUID" AND T1."INVERTER_ADDR"=t2."INVERTERADDR" AND T1."DATESTRING"=t2."DATESTRING"
        WHEN NOT MATCHED THEN
        INSERT("ID", "DTU_ID", "INVERTER_ADDR", "INVERTER_ID", "EXCEPTION1", "EXCEPTION2", "EXCEPTION3", "EXCEPTION4",
                                              "EXCEPTION5", "EXCEPTION6", "EXCEPTION7", "EXCEPTION8",
                                              "INVERTER_STATUS", "INVERTER_TIME",
                                              "DATESTRING", "CTIME", "MTIME")
        VALUES (seq_on_todaysummary.nextval, #{dtuId}, #{inverterAddr}, #{inverterId}, #{exception1}, #{exception2}, #{exception3}, #{exception4},
                                              #{exception5}, #{exception6}, #{exception7}, #{exception8},
                                              #{inverterStatus}, "TO_DATE"(TO_CHAR(#{inverterTime} / (1000 * 60 * 60 * 24) + TO_DATE('1970-01-01 08:00:00', 'YYYY-MM-DD HH:MI:SS'), 'YYYY-MM-DD HH:MI:SS'), 'YYYY-MM-DD HH:MI:SS'),
                                              #{datestring}, SYSDATE, SYSDATE)
    </insert>


    <!--逆变器实时数据表字段-->
    <sql id="inverterRealtimedataColumns">
        T1."ID" as id,
        T1."DTU_ID" as dtuId,
        T1."INVERTER_ADDR" as inverterAddr,
        T1."PV1_VOLTAGE" as pv1Voltage,
        T1."PV2_VOLTAGE" as pv2Voltage,
        T1."PV3_VOLTAGE" as pv3Voltage,
        T1."PV4_VOLTAGE" as pv4Voltage,
        T1."PV1_ELECTRIC_CURRENT" as pv1ElectricCurrent,
        T1."PV2_ELECTRIC_CURRENT" as pv2ElectricCurrent,
        T1."PV3_ELECTRIC_CURRENT" as pv3ElectricCurrent,
        T1."PV4_ELECTRIC_CURRENT" as pv4ElectricCurrent,
        T1."U_PHASE_VOLTAGE" as uPhaseVoltage,
        T1."V_PHASE_VOLTAGE" as vPhaseVoltage,
        T1."W_PHASE_VOLTAGE" as wPhaseVoltage,
        T1."BUS_PHASE_VOLTAGE" as busPhaseVoltage,
        T1."U_PHASE_ELECTRIC_CURRENT" uPhaseElectricCurrent,
        T1."V_PHASE_ELECTRIC_CURRENT" as vPhaseElectricCurrent,
        T1."W_PHASE_ELECTRIC_CURRENT" as wPhaseElectricCurrent,
        T1."BUS_PHASE_ELECTRIC_CURRENT" as busPhaseElectricCurrent,
        T1."GRID_FREQUENCY" as gridFrequency,
        T1."POWER_FACTOR" as powerFactor,
        T1."INPUT_POWER" as inputPower,
        T1."OUTPUT_POWER" as outputPower,
        T1."TEMPERATURE1" as temperature1,
        T1."TEMPERATURE2" as temperature2,
        T1."TEMPERATURE3" as temperature3,
        T1."GROUNDING_RESISTANCE" as groundingResistance,
        T1."LEAKAGE_CURRENT" as leakageCurrent,
        T1."DC_COMPONENT" as dcComponent,
        T1."CTIME" as ctime,
        T1."INVERTER_ID" as inverterId,
        T1."HIGHDATA_INSERT" AS highdataInsert,
        T1."LOWDATA_INSERT" as lowdataInsert
    </sql>


    <!--获取最近一条逆变器上报的数据-->
    <select id="getInverterLastInsertRealTimeData" resultType="com.socketserver.thrack.model.data.TabInverterRealtimeData">
        SELECT * FROM
        (SELECT
          <include refid="inverterRealtimedataColumns"/>
        FROM "TS_INVERTER_REALTIMEDATA" T1
        WHERE T1."DTU_ID" = #{dtuId}
          and T1."INVERTER_ID" = #{inverterId}
        ORDER BY T1."ID" DESC) t2
        WHERE ROWNUM <![CDATA[ < ]]> 2
    </select>

</mapper>