<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                        http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/cache
						http://www.springframework.org/schema/cache/spring-cache.xsd">

	<context:component-scan base-package="com.socketserver.chat.configuration" />

	<!-- turn on declarative caching -->
	<cache:annotation-driven />

	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
	</bean> -->

	<!-- 消息缓存服务器 -->
<!-- 	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg
			type="org.springframework.data.redis.connection.RedisSentinelConfiguration"
			ref="redisSentinelConfiguration" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="poolConfig" />
	</bean> -->

<!-- 	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />

	<bean id="redisJsonSerializer"
		class="org.springframework.data.redis.serializer.JacksonJsonRedisSerializer">
		<constructor-arg type="java.lang.Class" value="java.util.Map" />
	</bean>
 -->
<!-- 	<bean id="mapRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> -->
<!-- 		<property name="connectionFactory" ref="jedisConnectionFactory" /> -->
<!-- 		<property name="keySerializer" ref="stringRedisSerializer" /> -->
<!-- 		<property name="hashKeySerializer" ref="stringRedisSerializer" /> -->
<!-- 		<property name="valueSerializer" ref="redisJsonSerializer" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> -->
<!-- 		<property name="connectionFactory" ref="jedisConnectionFactory" /> -->
<!-- 		<property name="keySerializer" ref="stringRedisSerializer" /> -->
<!-- 		<property name="hashKeySerializer" ref="stringRedisSerializer" /> -->
<!-- 		<property name="valueSerializer" ref="stringRedisSerializer" /> -->
<!-- 		<property name="hashValueSerializer" ref="stringRedisSerializer" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="cacheableTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="redisJsonSerializer" />
	</bean> -->

	<!-- <bean id="hashRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> -->
	<!-- <property name="connectionFactory" ref="jedisConnectionFactory" /> -->
	<!-- <property name="keySerializer" ref="stringRedisSerializer" /> -->
	<!-- <property name="valueSerializer" ref="stringRedisSerializer" /> -->
	<!-- <property name="hashKeySerializer" ref="stringRedisSerializer" /> -->
	<!-- <property name="hashValueSerializer" ref="redisJsonSerializer" /> -->
	<!-- </bean> -->

	<!-- user token 验证服务器 -->
<!-- 	<bean id="jedisConnectionFactory2"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg
			type="org.springframework.data.redis.connection.RedisSentinelConfiguration"
			ref="redisSentinelConfiguration" /> -->
<!-- 		<property name="hostName" value="${redis2.host}" /> -->
<!-- 		<property name="port" value="${redis2.port}" /> -->
		<!-- <property name="poolConfig" ref="poolConfig2" />
	</bean> -->

<!-- 	<bean id="tokenRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory2" />
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="stringRedisSerializer" />
	</bean> -->

<!-- 	<bean id="poolConfig2" class="redis.clients.jedis.JedisPoolConfig">
	</bean> -->

	<bean id="cacheManager" class="com.socketserver.chat.cache.support.JedisClusterCacheManager">
		<constructor-arg type="redis.clients.jedis.JedisCluster" ref="jedisCluster" />
		<property name="defaultExpiration" value="3600" />
		<property name="expires">
			<map>
				<entry key="userInfo" value="10" />
				<entry key="userDevice" value="120" />
				<entry key="messageContent" value="3600" />
			</map>
		</property>
		<property name="cacheNames">
			<array>
				<value>userInfo</value>
				<value>userDevice</value>
				<value>messageContent</value>
			</array>
		</property>
	</bean>

</beans>